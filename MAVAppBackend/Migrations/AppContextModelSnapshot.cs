// <auto-generated />
using System;
using MAVAppBackend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MAVAppBackend.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MAVAppBackend.Entities.Station", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ExpiryDate");

                    b.Property<bool>("FullKnowledge");

                    b.Property<double?>("Latitude");

                    b.Property<double?>("Longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("MAVAppBackend.Entities.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EncodedPolyline");

                    b.Property<DateTime>("ExpiryDate");

                    b.Property<bool>("FullKnowledge");

                    b.Property<int>("TrainNumber");

                    b.Property<int?>("Type");

                    b.HasKey("Id");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("MAVAppBackend.Entities.TrainInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Delay");

                    b.Property<string>("ElviraId")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.ToTable("TrainInstances");
                });

            modelBuilder.Entity("MAVAppBackend.Entities.TrainStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<TimeSpan?>("Arrival");

                    b.Property<TimeSpan?>("Departure");

                    b.Property<double?>("Distance");

                    b.Property<int>("StationId");

                    b.Property<int>("TrainId");

                    b.HasKey("Id");

                    b.HasIndex("StationId");

                    b.HasIndex("TrainId");

                    b.ToTable("TrainStations");
                });

            modelBuilder.Entity("MAVAppBackend.Entities.TrainStationLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FromId");

                    b.Property<int?>("ToId");

                    b.Property<int>("TrainId");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.HasIndex("TrainId");

                    b.ToTable("TrainStationLinks");
                });

            modelBuilder.Entity("MAVAppBackend.Entities.TrainStation", b =>
                {
                    b.HasOne("MAVAppBackend.Entities.Station", "Station")
                        .WithMany()
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MAVAppBackend.Entities.Train", "Train")
                        .WithMany()
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MAVAppBackend.Entities.TrainStationLink", b =>
                {
                    b.HasOne("MAVAppBackend.Entities.Station", "From")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("MAVAppBackend.Entities.Station", "To")
                        .WithMany()
                        .HasForeignKey("ToId");

                    b.HasOne("MAVAppBackend.Entities.Train", "Train")
                        .WithMany()
                        .HasForeignKey("TrainId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
